name: Build Docker Image

on:
  push:
    branches: [ "main" ] # Aciona o workflow em eventos de push para a branch main
  pull_request:
    branches: [ "main" ] # Também aciona em pull requests para a main

jobs:
  build:
    runs-on: ubuntu-latest # Usa o runner Ubuntu mais recente

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Faz o checkout do código do repositório

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Configura o Docker Buildx para melhores capacidades de build

      # Opcional: Login em um registro Docker (ex: Docker Hub)
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }} # Necessário criar Secret no GitHub
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}  # Necessário criar Secret no GitHub

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Usa o diretório atual como contexto de build
          file: ./Dockerfile # Especifica o caminho para o Dockerfile
          push: false # Mude para true para enviar a imagem para um registro após o build
          tags: seu-usuario/seu-app:${{ github.sha }} # Marque a imagem (substitua seu-usuario/seu-app pelo nome desejado)
          # Exemplo para push:
          # push: ${{ github.event_name != 'pull_request' }} # Envia apenas no merge para main, não em PRs
          # tags: seu-dockerhub-username/seu-repo-name:latest, seu-dockerhub-username/seu-repo-name:${{ github.sha }}

